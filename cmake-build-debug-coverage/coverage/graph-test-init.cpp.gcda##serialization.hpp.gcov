        -:    0:Source:/usr/include/boost/serialization/serialization.hpp
        -:    0:Graph:/home/m4zz31/cppprojct/cmake-build-debug-coverage/CMakeFiles/cppprojct.dir/Tests/graph-test-init.cpp.gcno
        -:    0:Data:/home/m4zz31/cppprojct/cmake-build-debug-coverage/CMakeFiles/cppprojct.dir/Tests/graph-test-init.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#ifndef BOOST_SERIALIZATION_SERIALIZATION_HPP
        -:    2:#define BOOST_SERIALIZATION_SERIALIZATION_HPP
        -:    3:
        -:    4:// MS compatible compilers support #pragma once
        -:    5:#if defined(_MSC_VER)
        -:    6:# pragma once
        -:    7:#endif
        -:    8:
        -:    9:#if defined(_MSC_VER)
        -:   10:#  pragma warning (disable : 4675) // suppress ADL warning
        -:   11:#endif
        -:   12:
        -:   13:#include <boost/config.hpp>
        -:   14:#include <boost/serialization/strong_typedef.hpp>
        -:   15:
        -:   16://///////1/////////2/////////3/////////4/////////5/////////6/////////7/////////8
        -:   17:// serialization.hpp: interface for serialization system.
        -:   18:
        -:   19:// (C) Copyright 2002 Robert Ramey - http://www.rrsd.com .
        -:   20:// Use, modification and distribution is subject to the Boost Software
        -:   21:// License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
        -:   22:// http://www.boost.org/LICENSE_1_0.txt)
        -:   23:
        -:   24://  See http://www.boost.org for updates, documentation, and revision history.
        -:   25:
        -:   26://////////////////////////////////////////////////////////////////////
        -:   27:// public interface to serialization.
        -:   28:
        -:   29://///////////////////////////////////////////////////////////////////////////
        -:   30:// layer 0 - intrusive verison
        -:   31:// declared and implemented for each user defined class to be serialized
        -:   32://
        -:   33://  template<Archive>
        -:   34://  serialize(Archive &ar, const unsigned int file_version){
        -:   35://      ar & base_object<base>(*this) & member1 & member2 ... ;
        -:   36://  }
        -:   37:
        -:   38://///////////////////////////////////////////////////////////////////////////
        -:   39:// layer 1 - layer that routes member access through the access class.
        -:   40:// this is what permits us to grant access to private class member functions
        -:   41:// by specifying friend class boost::serialization::access
        -:   42:
        -:   43:#include <boost/serialization/access.hpp>
        -:   44:
        -:   45://///////////////////////////////////////////////////////////////////////////
        -:   46:// layer 2 - default implementation of non-intrusive serialization.
        -:   47://
        -:   48:
        -:   49:namespace boost {
        -:   50:namespace serialization {
        -:   51:
function _ZNK5boost13serialization12version_typecvRKjEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization12version_typeC2ERKj called 0 returned 0% blocks executed 0%
    #####:   52:BOOST_STRONG_TYPEDEF(unsigned int, version_type)
    $$$$$:   52-block  0
    $$$$$:   52-block  1
    $$$$$:   52-block  2
        -:   53:
        -:   54:// default implementation - call the member function "serialize"
        -:   55:template<class Archive, class T>
function _ZN5boost13serialization9serializeINS_3mpi15packed_iarchiveENS0_13array_wrapperIdEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9serializeINS_3mpi15packed_iarchiveE11DynamicEdgeEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9serializeINS_3mpi15packed_iarchiveENS_6detail8parallel20maybe_store_propertyI11DynamicEdgeEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9serializeINS_3mpi6detail21mpi_datatype_oarchiveENS_6detail8parallel20msg_remove_edge_dataINS6_15edge_descriptorINS5_14edge_desc_implINS_12directed_tagEmEEEEEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9serializeINS_3mpi15packed_iarchiveE11DynamicNodeEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9serializeINS_3mpi15packed_iarchiveENS_6detail8parallel31msg_add_edge_with_property_dataINS5_17global_descriptorImEEm11DynamicEdgeEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9serializeINS_3mpi15packed_iarchiveENS_6detail8parallel22msg_nonlocal_edge_dataI11DynamicEdgeNS4_14edge_desc_implINS_12directed_tagEmEEEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9serializeINS_3mpi6detail21mpi_datatype_oarchiveENS_6detail8parallel17global_descriptorImEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9serializeINS_3mpi6detail21mpi_datatype_oarchiveENS_6detail8parallel15edge_descriptorINS5_14edge_desc_implINS_12directed_tagEmEEEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9serializeINS_3mpi6detail21mpi_datatype_oarchiveENS_6detail8parallel17msg_add_edge_dataINS6_17global_descriptorImEEmEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9serializeINS_3mpi15packed_oarchiveE11DynamicEdgeEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9serializeINS_3mpi15packed_oarchiveENS_6detail8parallel20maybe_store_propertyI11DynamicEdgeEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9serializeINS_3mpi15packed_oarchiveENS_6detail8parallel31msg_add_edge_with_property_dataINS5_17global_descriptorImEEm11DynamicEdgeEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9serializeINS_3mpi15packed_oarchiveENS_6detail8parallel22msg_nonlocal_edge_dataI11DynamicEdgeNS4_14edge_desc_implINS_12directed_tagEmEEEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
    #####:   56:inline void serialize(
    $$$$$:   56-block  0
    $$$$$:   56-block  1
    $$$$$:   56-block  2
    $$$$$:   56-block  3
    $$$$$:   56-block  4
    $$$$$:   56-block  5
    $$$$$:   56-block  6
    $$$$$:   56-block  7
    $$$$$:   56-block  8
    $$$$$:   56-block  9
    $$$$$:   56-block 10
    $$$$$:   56-block 11
    $$$$$:   56-block 12
    $$$$$:   56-block 13
        -:   57:    Archive & ar, T & t, const unsigned int file_version
        -:   58:){
    #####:   59:    access::serialize(ar, t, static_cast<unsigned int>(file_version));
    $$$$$:   59-block  0
call    0 never executed
    $$$$$:   59-block  1
call    1 never executed
    $$$$$:   59-block  2
call    2 never executed
    $$$$$:   59-block  3
call    3 never executed
    $$$$$:   59-block  4
call    4 never executed
    $$$$$:   59-block  5
call    5 never executed
    $$$$$:   59-block  6
call    6 never executed
    $$$$$:   59-block  7
call    7 never executed
    $$$$$:   59-block  8
call    8 never executed
    $$$$$:   59-block  9
call    9 never executed
    $$$$$:   59-block 10
call   10 never executed
    $$$$$:   59-block 11
call   11 never executed
    $$$$$:   59-block 12
call   12 never executed
    $$$$$:   59-block 13
call   13 never executed
    #####:   60:}
        -:   61:
        -:   62:// save data required for construction
        -:   63:template<class Archive, class T>
        -:   64:inline void save_construct_data(
        -:   65:    Archive & /*ar*/,
        -:   66:    const T * /*t*/,
        -:   67:    const unsigned int /*file_version */
        -:   68:){
        -:   69:    // default is to save no data because default constructor
        -:   70:    // requires no arguments.
        -:   71:}
        -:   72:
        -:   73:// load data required for construction and invoke constructor in place
        -:   74:template<class Archive, class T>
        -:   75:inline void load_construct_data(
        -:   76:    Archive & /*ar*/,
        -:   77:    T * t,
        -:   78:    const unsigned int /*file_version*/
        -:   79:){
        -:   80:    // default just uses the default constructor.  going
        -:   81:    // through access permits usage of otherwise private default
        -:   82:    // constructor
        -:   83:    access::construct(t);
        -:   84:}
        -:   85:
        -:   86://///////////////////////////////////////////////////////////////////////////
        -:   87:// layer 3 - move call into serialization namespace so that ADL will function
        -:   88:// in the manner we desire.
        -:   89://
        -:   90:// on compilers which don't implement ADL. only the current namespace
        -:   91:// i.e. boost::serialization will be searched.
        -:   92://
        -:   93:// on compilers which DO implement ADL
        -:   94:// serialize overrides can be in any of the following
        -:   95://
        -:   96:// 1) same namepace as Archive
        -:   97:// 2) same namespace as T
        -:   98:// 3) boost::serialization
        -:   99://
        -:  100:// Due to Martin Ecker
        -:  101:
        -:  102:template<class Archive, class T>
function _ZN5boost13serialization13serialize_adlINS_3mpi15packed_iarchiveENS0_13array_wrapperIdEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi15packed_iarchiveENS0_3nvpIjEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi15packed_iarchiveENS0_3nvpINS0_20collection_size_typeEEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi15packed_iarchiveE11DynamicEdgeEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi15packed_iarchiveESt6vectorIdSaIdEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi15packed_iarchiveENS_6detail8parallel20maybe_store_propertyI11DynamicEdgeEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi15packed_iarchiveENS0_3nvpI11DynamicNodeEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi15packed_iarchiveENS0_3nvpINS_6detail8parallel31msg_add_edge_with_property_dataINS6_17global_descriptorImEEm11DynamicEdgeEEEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi15packed_iarchiveENS0_3nvpIiEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi6detail21mpi_datatype_oarchiveENS_6detail8parallel20msg_remove_edge_dataINS6_15edge_descriptorINS5_14edge_desc_implINS_12directed_tagEmEEEEEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi15packed_iarchiveE11DynamicNodeEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi15packed_iarchiveENS_8parallel6detail14untracked_pairIi11DynamicNodeEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi15packed_iarchiveENS_6detail8parallel31msg_add_edge_with_property_dataINS5_17global_descriptorImEEm11DynamicEdgeEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi15packed_iarchiveENS_8parallel6detail14untracked_pairIiNS_6detail8parallel31msg_add_edge_with_property_dataINS8_17global_descriptorImEEm11DynamicEdgeEEEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi15packed_iarchiveENS_6detail8parallel22msg_nonlocal_edge_dataI11DynamicEdgeNS4_14edge_desc_implINS_12directed_tagEmEEEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi6detail21mpi_datatype_oarchiveENS_6detail9edge_baseINS_12directed_tagEmEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi6detail21mpi_datatype_oarchiveENS_6detail14edge_desc_implINS_12directed_tagEmEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi6detail21mpi_datatype_oarchiveENS_6detail8parallel17global_descriptorImEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi6detail21mpi_datatype_oarchiveENS_6detail8parallel15edge_descriptorINS5_14edge_desc_implINS_12directed_tagEmEEEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi6detail21mpi_datatype_oarchiveENS_6detail8parallel17msg_add_edge_dataINS6_17global_descriptorImEEmEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi15packed_oarchiveE11DynamicEdgeEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi6detail21mpi_datatype_oarchiveENS0_3nvpIbEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi6detail21mpi_datatype_oarchiveENS0_3nvpINS_6detail8parallel15edge_descriptorINS6_14edge_desc_implINS_12directed_tagEmEEEEEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi6detail21mpi_datatype_oarchiveENS0_3nvpINS_6detail8parallel17msg_add_edge_dataINS7_17global_descriptorImEEmEEEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi6detail21mpi_datatype_oarchiveENS0_3nvpIiEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi15packed_oarchiveENS_6detail8parallel20maybe_store_propertyI11DynamicEdgeEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi15packed_oarchiveENS0_3nvpINS_6detail8parallel31msg_add_edge_with_property_dataINS6_17global_descriptorImEEm11DynamicEdgeEEEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi15packed_oarchiveENS0_3nvpIiEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi6detail21mpi_datatype_oarchiveENS_8parallel6detail14untracked_pairINS_6detail8parallel15edge_descriptorINS8_14edge_desc_implINS_12directed_tagEmEEEEbEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi6detail21mpi_datatype_oarchiveENS_8parallel6detail14untracked_pairIiNS_6detail8parallel17msg_add_edge_dataINS9_17global_descriptorImEEmEEEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi15packed_oarchiveENS_8parallel6detail14untracked_pairIiNS_6detail8parallel31msg_add_edge_with_property_dataINS8_17global_descriptorImEEm11DynamicEdgeEEEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi15packed_oarchiveENS_6detail8parallel31msg_add_edge_with_property_dataINS5_17global_descriptorImEEm11DynamicEdgeEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization13serialize_adlINS_3mpi15packed_oarchiveENS_6detail8parallel22msg_nonlocal_edge_dataI11DynamicEdgeNS4_14edge_desc_implINS_12directed_tagEmEEEEEEvRT_RT0_j called 0 returned 0% blocks executed 0%
    #####:  103:inline void serialize_adl(
    $$$$$:  103-block  0
    $$$$$:  103-block  1
    $$$$$:  103-block  2
    $$$$$:  103-block  3
    $$$$$:  103-block  4
    $$$$$:  103-block  5
    $$$$$:  103-block  6
    $$$$$:  103-block  7
    $$$$$:  103-block  8
    $$$$$:  103-block  9
    $$$$$:  103-block 10
    $$$$$:  103-block 11
    $$$$$:  103-block 12
    $$$$$:  103-block 13
    $$$$$:  103-block 14
    $$$$$:  103-block 15
    $$$$$:  103-block 16
    $$$$$:  103-block 17
    $$$$$:  103-block 18
    $$$$$:  103-block 19
    $$$$$:  103-block 20
    $$$$$:  103-block 21
    $$$$$:  103-block 22
    $$$$$:  103-block 23
    $$$$$:  103-block 24
    $$$$$:  103-block 25
    $$$$$:  103-block 26
    $$$$$:  103-block 27
    $$$$$:  103-block 28
    $$$$$:  103-block 29
    $$$$$:  103-block 30
    $$$$$:  103-block 31
    $$$$$:  103-block 32
        -:  104:    Archive & ar,
        -:  105:    T & t,
        -:  106:    const unsigned int file_version
        -:  107:){
    #####:  108:    const version_type v(file_version);
    $$$$$:  108-block  0
call    0 never executed
    $$$$$:  108-block  1
call    1 never executed
    $$$$$:  108-block  2
call    2 never executed
    $$$$$:  108-block  3
call    3 never executed
    $$$$$:  108-block  4
call    4 never executed
    $$$$$:  108-block  5
call    5 never executed
    $$$$$:  108-block  6
call    6 never executed
    $$$$$:  108-block  7
call    7 never executed
    $$$$$:  108-block  8
call    8 never executed
    $$$$$:  108-block  9
call    9 never executed
    $$$$$:  108-block 10
call   10 never executed
    $$$$$:  108-block 11
call   11 never executed
    $$$$$:  108-block 12
call   12 never executed
    $$$$$:  108-block 13
call   13 never executed
    $$$$$:  108-block 14
call   14 never executed
    $$$$$:  108-block 15
call   15 never executed
    $$$$$:  108-block 16
call   16 never executed
    $$$$$:  108-block 17
call   17 never executed
    $$$$$:  108-block 18
call   18 never executed
    $$$$$:  108-block 19
call   19 never executed
    $$$$$:  108-block 20
call   20 never executed
    $$$$$:  108-block 21
call   21 never executed
    $$$$$:  108-block 22
call   22 never executed
    $$$$$:  108-block 23
call   23 never executed
    $$$$$:  108-block 24
call   24 never executed
    $$$$$:  108-block 25
call   25 never executed
    $$$$$:  108-block 26
call   26 never executed
    $$$$$:  108-block 27
call   27 never executed
    $$$$$:  108-block 28
call   28 never executed
    $$$$$:  108-block 29
call   29 never executed
    $$$$$:  108-block 30
call   30 never executed
    $$$$$:  108-block 31
call   31 never executed
    $$$$$:  108-block 32
call   32 never executed
    #####:  109:    serialize(ar, t, v);
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
call    8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
branch 18 never executed
branch 19 never executed
call   20 never executed
call   21 never executed
branch 22 never executed
branch 23 never executed
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
call   28 never executed
call   29 never executed
branch 30 never executed
branch 31 never executed
call   32 never executed
call   33 never executed
branch 34 never executed
branch 35 never executed
call   36 never executed
call   37 never executed
branch 38 never executed
branch 39 never executed
call   40 never executed
call   41 never executed
branch 42 never executed
branch 43 never executed
call   44 never executed
call   45 never executed
branch 46 never executed
branch 47 never executed
call   48 never executed
call   49 never executed
branch 50 never executed
branch 51 never executed
call   52 never executed
call   53 never executed
branch 54 never executed
branch 55 never executed
call   56 never executed
call   57 never executed
branch 58 never executed
branch 59 never executed
call   60 never executed
call   61 never executed
branch 62 never executed
branch 63 never executed
call   64 never executed
call   65 never executed
branch 66 never executed
branch 67 never executed
call   68 never executed
call   69 never executed
branch 70 never executed
branch 71 never executed
call   72 never executed
call   73 never executed
branch 74 never executed
branch 75 never executed
call   76 never executed
call   77 never executed
branch 78 never executed
branch 79 never executed
call   80 never executed
call   81 never executed
branch 82 never executed
branch 83 never executed
call   84 never executed
call   85 never executed
branch 86 never executed
branch 87 never executed
call   88 never executed
call   89 never executed
branch 90 never executed
branch 91 never executed
call   92 never executed
call   93 never executed
branch 94 never executed
branch 95 never executed
call   96 never executed
call   97 never executed
branch 98 never executed
branch 99 never executed
call   100 never executed
call   101 never executed
branch 102 never executed
branch 103 never executed
call   104 never executed
call   105 never executed
branch 106 never executed
branch 107 never executed
call   108 never executed
call   109 never executed
branch 110 never executed
branch 111 never executed
call   112 never executed
call   113 never executed
branch 114 never executed
branch 115 never executed
call   116 never executed
call   117 never executed
branch 118 never executed
branch 119 never executed
call   120 never executed
call   121 never executed
branch 122 never executed
branch 123 never executed
call   124 never executed
call   125 never executed
branch 126 never executed
branch 127 never executed
call   128 never executed
call   129 never executed
branch 130 never executed
branch 131 never executed
    #####:  110:}
    $$$$$:  110-block  0
    $$$$$:  110-block  1
    $$$$$:  110-block  2
    $$$$$:  110-block  3
    $$$$$:  110-block  4
    $$$$$:  110-block  5
    $$$$$:  110-block  6
    $$$$$:  110-block  7
    $$$$$:  110-block  8
    $$$$$:  110-block  9
    $$$$$:  110-block 10
    $$$$$:  110-block 11
    $$$$$:  110-block 12
    $$$$$:  110-block 13
    $$$$$:  110-block 14
    $$$$$:  110-block 15
    $$$$$:  110-block 16
    $$$$$:  110-block 17
    $$$$$:  110-block 18
    $$$$$:  110-block 19
    $$$$$:  110-block 20
    $$$$$:  110-block 21
    $$$$$:  110-block 22
    $$$$$:  110-block 23
    $$$$$:  110-block 24
    $$$$$:  110-block 25
    $$$$$:  110-block 26
    $$$$$:  110-block 27
    $$$$$:  110-block 28
    $$$$$:  110-block 29
    $$$$$:  110-block 30
    $$$$$:  110-block 31
    $$$$$:  110-block 32
        -:  111:
        -:  112:template<class Archive, class T>
        -:  113:inline void save_construct_data_adl(
        -:  114:    Archive & ar,
        -:  115:    const T * t,
        -:  116:    const unsigned int file_version
        -:  117:){
        -:  118:
        -:  119:    const version_type v(file_version);
        -:  120:    save_construct_data(ar, t, v);
        -:  121:}
        -:  122:
        -:  123:template<class Archive, class T>
        -:  124:inline void load_construct_data_adl(
        -:  125:    Archive & ar,
        -:  126:    T * t,
        -:  127:    const unsigned int file_version
        -:  128:){
        -:  129:    // see above comment
        -:  130:    const version_type v(file_version);
        -:  131:    load_construct_data(ar, t, v);
        -:  132:}
        -:  133:
        -:  134:} // namespace serialization
        -:  135:} // namespace boost
        -:  136:
        -:  137:#endif //BOOST_SERIALIZATION_SERIALIZATION_HPP
