        -:    0:Source:/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/ompi/mpi/cxx/group_inln.h
        -:    0:Graph:/home/m4zz31/cppprojct/cmake-build-debug-coverage/CMakeFiles/cppprojct.dir/main.cpp.gcno
        -:    0:Data:/home/m4zz31/cppprojct/cmake-build-debug-coverage/CMakeFiles/cppprojct.dir/main.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// -*- c++ -*-
        -:    2://
        -:    3:// Copyright (c) 2004-2005 The Trustees of Indiana University and Indiana
        -:    4://                         University Research and Technology
        -:    5://                         Corporation.  All rights reserved.
        -:    6:// Copyright (c) 2004-2005 The University of Tennessee and The University
        -:    7://                         of Tennessee Research Foundation.  All rights
        -:    8://                         reserved.
        -:    9:// Copyright (c) 2004-2005 High Performance Computing Center Stuttgart,
        -:   10://                         University of Stuttgart.  All rights reserved.
        -:   11:// Copyright (c) 2004-2005 The Regents of the University of California.
        -:   12://                         All rights reserved.
        -:   13:// Copyright (c) 2016 Cisco Systems, Inc.  All rights reserved.
        -:   14:// $COPYRIGHT$
        -:   15://
        -:   16:// Additional copyrights may follow
        -:   17://
        -:   18:// $HEADER$
        -:   19://
        -:   20:
        -:   21://
        -:   22:// Groups, Contexts, and Communicators
        -:   23://
        -:   24:
        -:   25:inline int
function _ZNK3MPI5Group8Get_sizeEv called 0 returned 0% blocks executed 0%
    #####:   26:MPI::Group::Get_size() const
    $$$$$:   26-block  0
        -:   27:{
        -:   28:  int size;
    #####:   29:  (void)MPI_Group_size(mpi_group, &size);
    $$$$$:   29-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   30:  return size;
    $$$$$:   30-block  0
    $$$$$:   30-block  1
        -:   31:}
        -:   32:
        -:   33:inline int
function _ZNK3MPI5Group8Get_rankEv called 0 returned 0% blocks executed 0%
    #####:   34:MPI::Group::Get_rank() const
    $$$$$:   34-block  0
        -:   35:{
        -:   36:  int myrank;
    #####:   37:  (void)MPI_Group_rank(mpi_group, &myrank);
    $$$$$:   37-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   38:  return myrank;
    $$$$$:   38-block  0
    $$$$$:   38-block  1
        -:   39:}
        -:   40:
        -:   41:inline void
        -:   42:MPI::Group::Translate_ranks (const MPI::Group& group1, int n,
        -:   43:				    const int ranks1[],
        -:   44:				    const MPI::Group& group2, int ranks2[])
        -:   45:{
        -:   46:  (void)MPI_Group_translate_ranks(group1, n, const_cast<int *>(ranks1), group2, const_cast<int *>(ranks2));
        -:   47:}
        -:   48:
        -:   49:inline int
        -:   50:MPI::Group::Compare(const MPI::Group& group1, const MPI::Group& group2)
        -:   51:{
        -:   52:  int result;
        -:   53:  (void)MPI_Group_compare(group1, group2, &result);
        -:   54:  return result;
        -:   55:}
        -:   56:
        -:   57:inline MPI::Group
        -:   58:MPI::Group::Union(const MPI::Group &group1, const MPI::Group &group2)
        -:   59:{
        -:   60:  MPI_Group newgroup;
        -:   61:  (void)MPI_Group_union(group1, group2, &newgroup);
        -:   62:  return newgroup;
        -:   63:}
        -:   64:
        -:   65:inline MPI::Group
        -:   66:MPI::Group::Intersect(const MPI::Group &group1, const MPI::Group &group2)
        -:   67:{
        -:   68:  MPI_Group newgroup;
        -:   69:  (void)MPI_Group_intersection( group1,  group2, &newgroup);
        -:   70:  return newgroup;
        -:   71:}
        -:   72:
        -:   73:inline MPI::Group
        -:   74:MPI::Group::Difference(const MPI::Group &group1, const MPI::Group &group2)
        -:   75:{
        -:   76:  MPI_Group newgroup;
        -:   77:  (void)MPI_Group_difference(group1, group2, &newgroup);
        -:   78:  return newgroup;
        -:   79:}
        -:   80:
        -:   81:inline MPI::Group
function _ZNK3MPI5Group4InclEiPKi called 0 returned 0% blocks executed 0%
    #####:   82:MPI::Group::Incl(int n, const int ranks[]) const
    $$$$$:   82-block  0
        -:   83:{
        -:   84:  MPI_Group newgroup;
    #####:   85:  (void)MPI_Group_incl(mpi_group, n, const_cast<int *>(ranks), &newgroup);
    $$$$$:   85-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   86:  return newgroup;
    $$$$$:   86-block  0
call    0 never executed
    $$$$$:   86-block  1
        -:   87:}
        -:   88:
        -:   89:inline MPI::Group
function _ZNK3MPI5Group4ExclEiPKi called 0 returned 0% blocks executed 0%
    #####:   90:MPI::Group::Excl(int n, const int ranks[]) const
    $$$$$:   90-block  0
        -:   91:{
        -:   92:  MPI_Group newgroup;
    #####:   93:  (void)MPI_Group_excl(mpi_group, n, const_cast<int *>(ranks), &newgroup);
    $$$$$:   93-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   94:  return newgroup;
    $$$$$:   94-block  0
call    0 never executed
    $$$$$:   94-block  1
        -:   95:}
        -:   96:
        -:   97:inline MPI::Group
function _ZNK3MPI5Group10Range_inclEiPA3_Ki called 0 returned 0% blocks executed 0%
    #####:   98:MPI::Group::Range_incl(int n, const int ranges[][3]) const
    $$$$$:   98-block  0
        -:   99:{
        -:  100:  MPI_Group newgroup;
    #####:  101:  (void)MPI_Group_range_incl(mpi_group, n,
    $$$$$:  101-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  102:#if OMPI_CXX_SUPPORTS_2D_CONST_CAST
        -:  103:                             const_cast<int(*)[3]>(ranges),
        -:  104:#else
        -:  105:                             (int(*)[3]) ranges,
        -:  106:#endif
        -:  107:                             &newgroup);
    #####:  108:  return newgroup;
    $$$$$:  108-block  0
call    0 never executed
    $$$$$:  108-block  1
        -:  109:}
        -:  110:
        -:  111:inline MPI::Group
function _ZNK3MPI5Group10Range_exclEiPA3_Ki called 0 returned 0% blocks executed 0%
    #####:  112:MPI::Group::Range_excl(int n, const int ranges[][3]) const
    $$$$$:  112-block  0
        -:  113:{
        -:  114:  MPI_Group newgroup;
    #####:  115:  (void)MPI_Group_range_excl(mpi_group, n,
    $$$$$:  115-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  116:#if OMPI_CXX_SUPPORTS_2D_CONST_CAST
        -:  117:                             const_cast<int(*)[3]>(ranges),
        -:  118:#else
        -:  119:                             (int(*)[3]) ranges,
        -:  120:#endif
        -:  121:                             &newgroup);
    #####:  122:  return newgroup;
    $$$$$:  122-block  0
call    0 never executed
    $$$$$:  122-block  1
        -:  123:}
        -:  124:
        -:  125:inline void
function _ZN3MPI5Group4FreeEv called 0 returned 0% blocks executed 0%
    #####:  126:MPI::Group::Free()
    $$$$$:  126-block  0
        -:  127:{
    #####:  128:  (void)MPI_Group_free(&mpi_group);
    $$$$$:  128-block  0
call    0 never executed
    #####:  129:}
