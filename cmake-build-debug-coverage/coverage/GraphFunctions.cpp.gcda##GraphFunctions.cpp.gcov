        -:    0:Source:/home/m4zz31/cppprojct/GraphClasses/GraphFunctions.cpp
        -:    0:Graph:/home/m4zz31/cppprojct/cmake-build-debug-coverage/CMakeFiles/cppprojct.dir/GraphClasses/GraphFunctions.cpp.gcno
        -:    0:Data:/home/m4zz31/cppprojct/cmake-build-debug-coverage/CMakeFiles/cppprojct.dir/GraphClasses/GraphFunctions.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by m4zz31 on 3/11/21.
        -:    3://
        -:    4:
        -:    5:#include "GraphFunctions.h"
        -:    6:
        -:    7:
function _Z17register_to_valueRN5boost14adjacency_listINS_4vecSENS_12distributedSINS_5graph11distributed17mpi_process_groupES1_NS_8defaultSEEENS_14bidirectionalSE11DynamicNode11DynamicEdgeNS_11no_propertyENS_5listSEEE called 500 returned 100% blocks executed 100%
      500:    8:void register_to_value(Graph &g){
      500:    8-block  0
      500:    9:    auto vs = vertices(g);
      500:    9-block  0
call    0 returned 500
branch  1 taken 500 (fallthrough)
branch  2 taken 0 (throw)
function _Z17register_to_valueRN5boost14adjacency_listINS_4vecSENS_12distributedSINS_5graph11distributed17mpi_process_groupES1_NS_8defaultSEEENS_14bidirectionalSE11DynamicNode11DynamicEdgeNS_11no_propertyENS_5listSEEE._omp_fn.0 called 2000 returned 100% blocks executed 100%
     4000:   10:#pragma omp parallel firstprivate(vs)
     2000:   10-block  0
     2000:   10-block  1
   402000:   11:    for (auto v = vs.first; v != vs.second; ++v) {
     2000:   11-block  0
   402000:   11-block  1
call    0 returned 402000
branch  1 taken 2000 (fallthrough)
branch  2 taken 400000
     2000:   11-block  2
   400000:   12:        g[*v].value = g[*v].temporal_register;
   400000:   12-block  0
call    0 returned 400000
call    1 returned 400000
call    2 returned 400000
call    3 returned 400000
        -:   13:    }
      500:   14:};
      500:   14-block  0
        -:   15:
function _Z25contribute_to_integrationR18ReferenceContainer called 1000 returned 100% blocks executed 100%
     1000:   16:void contribute_to_integration(ReferenceContainer &REF){
     1000:   16-block  0
        -:   17:    // ******************HOW THE INTEGRATION CONTINUES  ;-)*****************
        -:   18:    //
        -:   19:    // Perform the evolution and store the result in the central
        -:   20:    // node's temporal register
        -:   21://        g[*v].temporal_register = solver.evolve(centralValue,
        -:   22://                                             centralParams,
        -:   23://                                             neighborValues,
        -:   24://                                             edgeValues);
        -:   25://        clear_vectors(centralParams, neighborValues, edgeValues);
function _GLOBAL__sub_I__Z17register_to_valueRN5boost14adjacency_listINS_4vecSENS_12distributedSINS_5graph11distributed17mpi_process_groupES1_NS_8defaultSEEENS_14bidirectionalSE11DynamicNode11DynamicEdgeNS_11no_propertyENS_5listSEEE called 1 returned 100% blocks executed 100%
function _Z41__static_initialization_and_destruction_0ii called 1 returned 100% blocks executed 64%
        4:   26:}
        1:   26-block  0
        1:   26-block  1
call    0 returned 1
        1:   26-block  2
        1:   26-block  3
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:   26-block  4
branch  3 taken 1 (fallthrough)
branch  4 taken 0
        1:   26-block  5
