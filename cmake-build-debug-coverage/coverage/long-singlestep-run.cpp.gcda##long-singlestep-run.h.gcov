        -:    0:Source:/home/m4zz31/cppprojct/Tests/long-singlestep-run.h
        -:    0:Graph:/home/m4zz31/cppprojct/cmake-build-debug-coverage/CMakeFiles/cppprojct.dir/Tests/long-singlestep-run.cpp.gcno
        -:    0:Data:/home/m4zz31/cppprojct/cmake-build-debug-coverage/CMakeFiles/cppprojct.dir/Tests/long-singlestep-run.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by m4zz31 on 7/11/21.
        -:    3://
        -:    4:
        -:    5:#ifndef CPPPROJCT_LONG_SINGLESTEP_RUN_H
        -:    6:#define CPPPROJCT_LONG_SINGLESTEP_RUN_H
        -:    7:
        -:    8:
        -:    9:#include "../Utils/adequate_synchronization.h"
        -:   10:#include "../Utils/global_standard_messages.h"
        -:   11:#include "../Solvers/EulerSolver.h"
        -:   12:#include "../Solvers/RungeKuttaSolver.h"
        -:   13:#include "../DifferentialEquations/NoiselessKuramoto.h"
        -:   14:#include "../GraphClasses/GraphFunctions.h"
        -:   15:#include "../Utils/HelperClasses.h"
        -:   16:#include "../Communication/CommunicationFunctions.h"
        -:   17:
        -:   18:template <int T, typename GRAPHTYPE, int BATCH>
        -:   19:void test_long_singlestep_run(GRAPHTYPE &G, std::string name,
        -:   20:                                     CommunicationHelper &ComHelper,
        -:   21:                                     ParallelHelper &ParHelper,
        -:   22:                                     IntegrationHelper &IntHelper,
        -:   23:                                     MappingHelper &MapHelper,
        -:   24:                                        int NRUNS) {
        -:   25:    // Print in command what test is it
        -:   26:    adsync_message<T>(msg_prev + "'test_" + name + "_graph_singlestep_evolution'", G.g);
        -:   27:
        -:   28:    // Preprocessing
        -:   29:    adsync_message<T>(msg_prev + "'preparing " + name + " graph for singlestep evolution'", G.g);
        -:   30:    G.build();
        -:   31:    GeneralSolver<NoiselessKuramoto, EulerSolver<NoiselessKuramoto>> S_eu("eu", 1);
        -:   32:    double t[4] = {1, 2, 2, 1};
        -:   33:    GeneralSolver<NoiselessKuramoto, RungeKuttaSolver<NoiselessKuramoto>> S_rk("rk", 4, t);
        -:   34:    G.kuramoto_initialization({{12.345, 6.78}}, 3.14, G.g, G.N);
        -:   35:    adsync_message_barrier<T>(msg_post + "'preparing ring graph for singlestep evolution'", G.g);
        -:   36:
        -:   37:
        -:   38:    for (int i = 0; i < NRUNS; i++) {
        -:   39:        // Test several kuramoto evolutions with Euler
        -:   40:        single_evolution<NoiselessKuramoto, EulerSolver<NoiselessKuramoto>, BATCH>(G.g, S_eu, ComHelper, ParHelper,
        -:   41:                                                                                IntHelper, MapHelper, G.N);
        -:   42:    }
        -:   43:
        -:   44:}
        -:   45:
        -:   46:
        -:   47:template <int BATCH>
        -:   48:void central_test_long_singlestep_run(unsigned int SEED, int N, double p, int NRUNS){
        -:   49:    // Ring Network
        -:   50:    reproductibility_lock(SEED);
        -:   51:    RingGraphObject G2(N);
        -:   52:
        -:   53:    // helpers instantiated here just temporaly :-)
        -:   54:    unsigned long NVtot = boost::num_vertices(G2.g);
        -:   55:    CommunicationHelper ComHelper(G2.g);
        -:   56:    ParallelHelper ParHelper(ComHelper.NUM_THREADS, NVtot);
        -:   57:    IntegrationHelper IntHelper(NVtot);
        -:   58:    MappingHelper MapHelper(G2.g);
        -:   59:
        -:   60:    test_long_singlestep_run<100, RingGraphObject, BATCH>(G2, "Ring",
        -:   61:                                                   ComHelper, ParHelper,
        -:   62:                                                   IntHelper, MapHelper,
        -:   63:                                                   NRUNS);
function _GLOBAL__sub_I_long_singlestep_run.cpp called 1 returned 100% blocks executed 100%
function _Z41__static_initialization_and_destruction_1ii called 1 returned 100% blocks executed 44%
function _Z41__static_initialization_and_destruction_0ii called 1 returned 100% blocks executed 62%
        6:   64:};
        1:   64-block  0
        1:   64-block  1
call    0 returned 1
call    1 returned 1
        1:   64-block  2
        1:   64-block  3
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        1:   64-block  4
branch  4 taken 1 (fallthrough)
branch  5 taken 0
        1:   64-block  5
        1:   64-block  6
branch  6 taken 1 (fallthrough)
branch  7 taken 0
        1:   64-block  7
branch  8 taken 1 (fallthrough)
branch  9 taken 0
        1:   64-block  8
        -:   65:
        -:   66:#endif //CPPPROJCT_LONG_SINGLESTEP_RUN_H
