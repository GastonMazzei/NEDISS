        -:    0:Source:/usr/include/boost/serialization/singleton.hpp
        -:    0:Graph:/home/m4zz31/cppprojct/cmake-build-debug-coverage/CMakeFiles/cppprojct.dir/GraphClasses/CliqueGraph.cpp.gcno
        -:    0:Data:/home/m4zz31/cppprojct/cmake-build-debug-coverage/CMakeFiles/cppprojct.dir/GraphClasses/CliqueGraph.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#ifndef BOOST_SERIALIZATION_SINGLETON_HPP
        -:    2:#define BOOST_SERIALIZATION_SINGLETON_HPP
        -:    3:
        -:    4://///////1/////////2///////// 3/////////4/////////5/////////6/////////7/////////8
        -:    5://  singleton.hpp
        -:    6://
        -:    7:// Copyright David Abrahams 2006. Original version
        -:    8://
        -:    9:// Copyright Robert Ramey 2007.  Changes made to permit
        -:   10:// application throughout the serialization library.
        -:   11://
        -:   12:// Copyright Alexander Grund 2018. Corrections to singleton lifetime
        -:   13://
        -:   14:// Distributed under the Boost
        -:   15:// Software License, Version 1.0. (See accompanying
        -:   16:// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
        -:   17://
        -:   18:// The intention here is to define a template which will convert
        -:   19:// any class into a singleton with the following features:
        -:   20://
        -:   21:// a) initialized before first use.
        -:   22:// b) thread-safe for const access to the class
        -:   23:// c) non-locking
        -:   24://
        -:   25:// In order to do this,
        -:   26:// a) Initialize dynamically when used.
        -:   27:// b) Require that all singletons be initialized before main
        -:   28:// is called or any entry point into the shared library is invoked.
        -:   29:// This guarentees no race condition for initialization.
        -:   30:// In debug mode, we assert that no non-const functions are called
        -:   31:// after main is invoked.
        -:   32://
        -:   33:
        -:   34:// MS compatible compilers support #pragma once
        -:   35:#if defined(_MSC_VER)
        -:   36:# pragma once
        -:   37:#endif
        -:   38:
        -:   39:#include <boost/assert.hpp>
        -:   40:#include <boost/config.hpp>
        -:   41:#include <boost/noncopyable.hpp>
        -:   42:#include <boost/serialization/force_include.hpp>
        -:   43:#include <boost/serialization/config.hpp>
        -:   44:
        -:   45:#include <boost/archive/detail/auto_link_archive.hpp>
        -:   46:#include <boost/archive/detail/abi_prefix.hpp> // must be the last header
        -:   47:
        -:   48:#ifdef BOOST_MSVC
        -:   49:#  pragma warning(push)
        -:   50:#  pragma warning(disable : 4511 4512)
        -:   51:#endif
        -:   52:
        -:   53:namespace boost {
        -:   54:namespace serialization {
        -:   55:
        -:   56://////////////////////////////////////////////////////////////////////
        -:   57:// Provides a dynamically-initialized (singleton) instance of T in a
        -:   58:// way that avoids LNK1179 on vc6.  See http://tinyurl.com/ljdp8 or
        -:   59:// http://lists.boost.org/Archives/boost/2006/05/105286.php for
        -:   60:// details.
        -:   61://
        -:   62:
        -:   63:// Singletons created by this code are guaranteed to be unique
        -:   64:// within the executable or shared library which creates them.
        -:   65:// This is sufficient and in fact ideal for the serialization library.
        -:   66:// The singleton is created when the module is loaded and destroyed
        -:   67:// when the module is unloaded.
        -:   68:
        -:   69:// This base class has two functions.
        -:   70:
        -:   71:// First it provides a module handle for each singleton indicating
        -:   72:// the executable or shared library in which it was created. This
        -:   73:// turns out to be necessary and sufficient to implement the tables
        -:   74:// used by serialization library.
        -:   75:
        -:   76:// Second, it provides a mechanism to detect when a non-const function
        -:   77:// is called after initialization.
        -:   78:
        -:   79:// Make a singleton to lock/unlock all singletons for alteration.
        -:   80:// The intent is that all singletons created/used by this code
        -:   81:// are to be initialized before main is called. A test program
        -:   82:// can lock all the singletons when main is entered.  Thus any
        -:   83:// attempt to retrieve a mutable instance while locked will
        -:   84:// generate an assertion if compiled for debug.
        -:   85:
        -:   86:// The singleton template can be used in 2 ways:
        -:   87:// 1 (Recommended): Publicly inherit your type T from singleton<T>,
        -:   88:// make its ctor protected and access it via T::get_const_instance()
        -:   89:// 2: Simply access singleton<T> without changing T. Note that this only
        -:   90:// provides a global instance accesible by singleton<T>::get_const_instance()
        -:   91:// or singleton<T>::get_mutable_instance() to prevent using multiple instances
        -:   92:// of T make its ctor protected
        -:   93:
        -:   94:// Note on usage of BOOST_DLLEXPORT: These functions are in danger of
        -:   95:// being eliminated by the optimizer when building an application in
        -:   96:// release mode. Usage of the macro is meant to signal the compiler/linker
        -:   97:// to avoid dropping these functions which seem to be unreferenced.
        -:   98:// This usage is not related to autolinking.
        -:   99:
        -:  100:class BOOST_SYMBOL_VISIBLE singleton_module :
        -:  101:    public boost::noncopyable
        -:  102:{
        -:  103:private:
function _ZN5boost13serialization16singleton_module8get_lockEv called 0 returned 0% blocks executed 0%
    #####:  104:    BOOST_DLLEXPORT bool & get_lock() BOOST_USED {
    $$$$$:  104-block  0
        -:  105:        static bool lock = false;
    #####:  106:        return lock;
    $$$$$:  106-block  0
        -:  107:    }
        -:  108:
        -:  109:public:
        -:  110:    BOOST_DLLEXPORT void lock(){
        -:  111:        get_lock() = true;
        -:  112:    }
        -:  113:    BOOST_DLLEXPORT void unlock(){
        -:  114:        get_lock() = false;
        -:  115:    }
        -:  116:    BOOST_DLLEXPORT bool is_locked(){
        -:  117:        return get_lock();
        -:  118:    }
        -:  119:};
        -:  120:
        -:  121:static inline singleton_module & get_singleton_module(){
        -:  122:    static singleton_module m;
        -:  123:    return m;
        -:  124:}
        -:  125:
        -:  126:namespace detail {
        -:  127:
        -:  128:// This is the class actually instantiated and hence the real singleton.
        -:  129:// So there will only be one instance of this class. This does not hold
        -:  130:// for singleton<T> as a class derived from singleton<T> could be
        -:  131:// instantiated multiple times.
        -:  132:// It also provides a flag `is_destroyed` which returns true, when the
        -:  133:// class was destructed. It is static and hence accesible even after
        -:  134:// destruction. This can be used to check, if the singleton is still
        -:  135:// accesible e.g. in destructors of other singletons.
        -:  136:template<class T>
        -:  137:class singleton_wrapper : public T
        -:  138:{
function _ZN5boost13serialization6detail17singleton_wrapperINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveE11DynamicEdgeEEE16get_is_destroyedEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS0_25extended_type_info_typeidISt6vectorIdSaIdEEEEE16get_is_destroyedEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveESt6vectorIdSaIdEEEEE16get_is_destroyedEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS0_25extended_type_info_typeidI11DynamicNodeEEE16get_is_destroyedEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveE11DynamicNodeEEE16get_is_destroyedEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS0_25extended_type_info_typeidI11DynamicEdgeEEE16get_is_destroyedEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS_7archive6detail11oserializerINS_3mpi15packed_oarchiveE11DynamicEdgeEEE16get_is_destroyedEv called 0 returned 0% blocks executed 0%
    #####:  139:    static bool & get_is_destroyed(){
    $$$$$:  139-block  0
    $$$$$:  139-block  1
    $$$$$:  139-block  2
    $$$$$:  139-block  3
    $$$$$:  139-block  4
    $$$$$:  139-block  5
    $$$$$:  139-block  6
        -:  140:        // Prefer a static function member to avoid LNK1179.
        -:  141:        // Note: As this is for a singleton (1 instance only) it must be set
        -:  142:        // never be reset (to false)!
        -:  143:        static bool is_destroyed_flag = false;
    #####:  144:        return is_destroyed_flag;
    $$$$$:  144-block  0
    $$$$$:  144-block  1
    $$$$$:  144-block  2
    $$$$$:  144-block  3
    $$$$$:  144-block  4
    $$$$$:  144-block  5
    $$$$$:  144-block  6
        -:  145:    }
        -:  146:public:
function _ZN5boost13serialization6detail17singleton_wrapperINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveE11DynamicEdgeEEEC2Ev called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS0_25extended_type_info_typeidISt6vectorIdSaIdEEEEEC2Ev called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveESt6vectorIdSaIdEEEEEC2Ev called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS0_25extended_type_info_typeidI11DynamicNodeEEEC2Ev called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveE11DynamicNodeEEEC2Ev called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS0_25extended_type_info_typeidI11DynamicEdgeEEEC2Ev called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS_7archive6detail11oserializerINS_3mpi15packed_oarchiveE11DynamicEdgeEEEC2Ev called 0 returned 0% blocks executed 0%
    #####:  147:    singleton_wrapper(){
    $$$$$:  147-block  0
    $$$$$:  147-block  1
call    0 never executed
    %%%%%:  147-block  2
call    1 never executed
    $$$$$:  147-block  3
    $$$$$:  147-block  4
call    2 never executed
    %%%%%:  147-block  5
call    3 never executed
    $$$$$:  147-block  6
    $$$$$:  147-block  7
call    4 never executed
    %%%%%:  147-block  8
call    5 never executed
    $$$$$:  147-block  9
    $$$$$:  147-block 10
call    6 never executed
    %%%%%:  147-block 11
call    7 never executed
    $$$$$:  147-block 12
    $$$$$:  147-block 13
call    8 never executed
    %%%%%:  147-block 14
call    9 never executed
    $$$$$:  147-block 15
    $$$$$:  147-block 16
call   10 never executed
    %%%%%:  147-block 17
call   11 never executed
    $$$$$:  147-block 18
    $$$$$:  147-block 19
call   12 never executed
    %%%%%:  147-block 20
call   13 never executed
    #####:  148:        BOOST_ASSERT(! is_destroyed());
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:  148-block  0
branch  3 never executed
branch  4 never executed
    $$$$$:  148-block  1
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    $$$$$:  148-block  2
branch  9 never executed
branch 10 never executed
    $$$$$:  148-block  3
call   11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
    $$$$$:  148-block  4
branch 15 never executed
branch 16 never executed
    $$$$$:  148-block  5
call   17 never executed
call   18 never executed
branch 19 never executed
branch 20 never executed
    $$$$$:  148-block  6
branch 21 never executed
branch 22 never executed
    $$$$$:  148-block  7
call   23 never executed
call   24 never executed
branch 25 never executed
branch 26 never executed
    $$$$$:  148-block  8
branch 27 never executed
branch 28 never executed
    $$$$$:  148-block  9
call   29 never executed
call   30 never executed
branch 31 never executed
branch 32 never executed
    $$$$$:  148-block 10
branch 33 never executed
branch 34 never executed
    $$$$$:  148-block 11
call   35 never executed
call   36 never executed
branch 37 never executed
branch 38 never executed
    $$$$$:  148-block 12
branch 39 never executed
branch 40 never executed
    $$$$$:  148-block 13
call   41 never executed
    #####:  149:    }
    $$$$$:  149-block  0
    $$$$$:  149-block  1
    $$$$$:  149-block  2
    $$$$$:  149-block  3
    $$$$$:  149-block  4
    $$$$$:  149-block  5
    $$$$$:  149-block  6
function _ZN5boost13serialization6detail17singleton_wrapperINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveE11DynamicEdgeEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveE11DynamicEdgeEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS0_25extended_type_info_typeidISt6vectorIdSaIdEEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS0_25extended_type_info_typeidISt6vectorIdSaIdEEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveESt6vectorIdSaIdEEEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveESt6vectorIdSaIdEEEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS0_25extended_type_info_typeidI11DynamicNodeEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS0_25extended_type_info_typeidI11DynamicNodeEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveE11DynamicNodeEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveE11DynamicNodeEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS0_25extended_type_info_typeidI11DynamicEdgeEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS0_25extended_type_info_typeidI11DynamicEdgeEEED2Ev called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS_7archive6detail11oserializerINS_3mpi15packed_oarchiveE11DynamicEdgeEEED0Ev called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS_7archive6detail11oserializerINS_3mpi15packed_oarchiveE11DynamicEdgeEEED2Ev called 0 returned 0% blocks executed 0%
    #####:  150:    ~singleton_wrapper(){
    $$$$$:  150-block  0
    $$$$$:  150-block  1
    $$$$$:  150-block  2
    $$$$$:  150-block  3
    $$$$$:  150-block  4
    $$$$$:  150-block  5
    $$$$$:  150-block  6
    $$$$$:  150-block  7
    $$$$$:  150-block  8
    $$$$$:  150-block  9
    $$$$$:  150-block 10
    $$$$$:  150-block 11
    $$$$$:  150-block 12
    $$$$$:  150-block 13
    #####:  151:        get_is_destroyed() = true;
    $$$$$:  151-block  0
call    0 never executed
    $$$$$:  151-block  1
call    1 never executed
    $$$$$:  151-block  2
call    2 never executed
    $$$$$:  151-block  3
call    3 never executed
    $$$$$:  151-block  4
call    4 never executed
    $$$$$:  151-block  5
call    5 never executed
    $$$$$:  151-block  6
call    6 never executed
    #####:  152:    }
    $$$$$:  152-block  0
call    0 never executed
call    1 never executed
call    2 never executed
    $$$$$:  152-block  1
call    3 never executed
call    4 never executed
call    5 never executed
    $$$$$:  152-block  2
call    6 never executed
call    7 never executed
call    8 never executed
    $$$$$:  152-block  3
call    9 never executed
call   10 never executed
call   11 never executed
    $$$$$:  152-block  4
call   12 never executed
call   13 never executed
call   14 never executed
    $$$$$:  152-block  5
call   15 never executed
call   16 never executed
call   17 never executed
    $$$$$:  152-block  6
call   18 never executed
call   19 never executed
call   20 never executed
function _ZN5boost13serialization6detail17singleton_wrapperINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveE11DynamicEdgeEEE12is_destroyedEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS0_25extended_type_info_typeidISt6vectorIdSaIdEEEEE12is_destroyedEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveESt6vectorIdSaIdEEEEE12is_destroyedEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS0_25extended_type_info_typeidI11DynamicNodeEEE12is_destroyedEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveE11DynamicNodeEEE12is_destroyedEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS0_25extended_type_info_typeidI11DynamicEdgeEEE12is_destroyedEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization6detail17singleton_wrapperINS_7archive6detail11oserializerINS_3mpi15packed_oarchiveE11DynamicEdgeEEE12is_destroyedEv called 0 returned 0% blocks executed 0%
    #####:  153:    static bool is_destroyed(){
    $$$$$:  153-block  0
    $$$$$:  153-block  1
    $$$$$:  153-block  2
    $$$$$:  153-block  3
    $$$$$:  153-block  4
    $$$$$:  153-block  5
    $$$$$:  153-block  6
    #####:  154:        return get_is_destroyed();
    $$$$$:  154-block  0
call    0 never executed
    $$$$$:  154-block  1
call    1 never executed
    $$$$$:  154-block  2
call    2 never executed
    $$$$$:  154-block  3
call    3 never executed
    $$$$$:  154-block  4
call    4 never executed
    $$$$$:  154-block  5
call    5 never executed
    $$$$$:  154-block  6
call    6 never executed
        -:  155:    }
        -:  156:};
        -:  157:
        -:  158:} // detail
        -:  159:
        -:  160:template <class T>
        -:  161:class singleton {
        -:  162:private:
        -:  163:    static T * m_instance;
        -:  164:    // include this to provoke instantiation at pre-execution time
function _ZN5boost13serialization9singletonINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveE11DynamicEdgeEEE3useERKS8_ called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS0_25extended_type_info_typeidISt6vectorIdSaIdEEEEE3useERKS6_ called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveESt6vectorIdSaIdEEEEE3useERKSA_ called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS0_25extended_type_info_typeidI11DynamicNodeEEE3useERKS4_ called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveE11DynamicNodeEEE3useERKS8_ called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS0_25extended_type_info_typeidI11DynamicEdgeEEE3useERKS4_ called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS_7archive6detail11oserializerINS_3mpi15packed_oarchiveE11DynamicEdgeEEE3useERKS8_ called 0 returned 0% blocks executed 0%
    #####:  165:    static void use(T const &) {}
    $$$$$:  165-block  0
    $$$$$:  165-block  1
    $$$$$:  165-block  2
    $$$$$:  165-block  3
    $$$$$:  165-block  4
    $$$$$:  165-block  5
    $$$$$:  165-block  6
function _ZN5boost13serialization9singletonINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveE11DynamicEdgeEEE12get_instanceEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS0_25extended_type_info_typeidISt6vectorIdSaIdEEEEE12get_instanceEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveESt6vectorIdSaIdEEEEE12get_instanceEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS0_25extended_type_info_typeidI11DynamicNodeEEE12get_instanceEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveE11DynamicNodeEEE12get_instanceEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS0_25extended_type_info_typeidI11DynamicEdgeEEE12get_instanceEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS_7archive6detail11oserializerINS_3mpi15packed_oarchiveE11DynamicEdgeEEE12get_instanceEv called 0 returned 0% blocks executed 0%
    #####:  166:    static T & get_instance() {
    $$$$$:  166-block  0
    $$$$$:  166-block  1
    $$$$$:  166-block  2
    $$$$$:  166-block  3
    $$$$$:  166-block  4
    $$$$$:  166-block  5
    $$$$$:  166-block  6
    #####:  167:        BOOST_ASSERT(! is_destroyed());
    $$$$$:  167-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:  167-block  1
call    3 never executed
    $$$$$:  167-block  2
call    4 never executed
branch  5 never executed
branch  6 never executed
    $$$$$:  167-block  3
call    7 never executed
    $$$$$:  167-block  4
call    8 never executed
branch  9 never executed
branch 10 never executed
    $$$$$:  167-block  5
call   11 never executed
    $$$$$:  167-block  6
call   12 never executed
branch 13 never executed
branch 14 never executed
    $$$$$:  167-block  7
call   15 never executed
    $$$$$:  167-block  8
call   16 never executed
branch 17 never executed
branch 18 never executed
    $$$$$:  167-block  9
call   19 never executed
    $$$$$:  167-block 10
call   20 never executed
branch 21 never executed
branch 22 never executed
    $$$$$:  167-block 11
call   23 never executed
    $$$$$:  167-block 12
call   24 never executed
branch 25 never executed
branch 26 never executed
    $$$$$:  167-block 13
call   27 never executed
        -:  168:
        -:  169:        // use a wrapper so that types T with protected constructors can be used
        -:  170:        // Using a static function member avoids LNK1179
    #####:  171:        static detail::singleton_wrapper< T > t;
    $$$$$:  171-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  171-block  1
call    2 never executed
branch  3 never executed
branch  4 never executed
    $$$$$:  171-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    $$$$$:  171-block  3
call    8 never executed
call    9 never executed
    %%%%%:  171-block  4
branch 10 never executed
branch 11 never executed
    %%%%%:  171-block  5
call   12 never executed
    $$$$$:  171-block  6
branch 13 never executed
branch 14 never executed
    $$$$$:  171-block  7
call   15 never executed
branch 16 never executed
branch 17 never executed
    $$$$$:  171-block  8
call   18 never executed
branch 19 never executed
branch 20 never executed
    $$$$$:  171-block  9
call   21 never executed
call   22 never executed
    %%%%%:  171-block 10
branch 23 never executed
branch 24 never executed
    %%%%%:  171-block 11
call   25 never executed
    $$$$$:  171-block 12
branch 26 never executed
branch 27 never executed
    $$$$$:  171-block 13
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  171-block 14
call   31 never executed
branch 32 never executed
branch 33 never executed
    $$$$$:  171-block 15
call   34 never executed
call   35 never executed
    %%%%%:  171-block 16
branch 36 never executed
branch 37 never executed
    %%%%%:  171-block 17
call   38 never executed
    $$$$$:  171-block 18
branch 39 never executed
branch 40 never executed
    $$$$$:  171-block 19
call   41 never executed
branch 42 never executed
branch 43 never executed
    $$$$$:  171-block 20
call   44 never executed
branch 45 never executed
branch 46 never executed
    $$$$$:  171-block 21
call   47 never executed
call   48 never executed
    %%%%%:  171-block 22
branch 49 never executed
branch 50 never executed
    %%%%%:  171-block 23
call   51 never executed
    $$$$$:  171-block 24
branch 52 never executed
branch 53 never executed
    $$$$$:  171-block 25
call   54 never executed
branch 55 never executed
branch 56 never executed
    $$$$$:  171-block 26
call   57 never executed
branch 58 never executed
branch 59 never executed
    $$$$$:  171-block 27
call   60 never executed
call   61 never executed
    %%%%%:  171-block 28
branch 62 never executed
branch 63 never executed
    %%%%%:  171-block 29
call   64 never executed
    $$$$$:  171-block 30
branch 65 never executed
branch 66 never executed
    $$$$$:  171-block 31
call   67 never executed
branch 68 never executed
branch 69 never executed
    $$$$$:  171-block 32
call   70 never executed
branch 71 never executed
branch 72 never executed
    $$$$$:  171-block 33
call   73 never executed
call   74 never executed
    %%%%%:  171-block 34
branch 75 never executed
branch 76 never executed
    %%%%%:  171-block 35
call   77 never executed
    $$$$$:  171-block 36
branch 78 never executed
branch 79 never executed
    $$$$$:  171-block 37
call   80 never executed
branch 81 never executed
branch 82 never executed
    $$$$$:  171-block 38
call   83 never executed
branch 84 never executed
branch 85 never executed
    $$$$$:  171-block 39
call   86 never executed
call   87 never executed
    %%%%%:  171-block 40
branch 88 never executed
branch 89 never executed
    %%%%%:  171-block 41
call   90 never executed
        -:  172:
        -:  173:        // note that the following is absolutely essential.
        -:  174:        // commenting out this statement will cause compilers to fail to
        -:  175:        // construct the instance at pre-execution time.  This would prevent
        -:  176:        // our usage/implementation of "locking" and introduce uncertainty into
        -:  177:        // the sequence of object initialization.
        -:  178:        // Unfortunately, this triggers detectors of undefine behavior
        -:  179:        // and reports an error.  But I've been unable to find a different
        -:  180:        // of guarenteeing that the the singleton is created at pre-main time.
    #####:  181:        if (m_instance) use(* m_instance);
    $$$$$:  181-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  181-block  1
call    2 never executed
    $$$$$:  181-block  2
branch  3 never executed
branch  4 never executed
    $$$$$:  181-block  3
call    5 never executed
    $$$$$:  181-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  181-block  5
call    8 never executed
    $$$$$:  181-block  6
branch  9 never executed
branch 10 never executed
    $$$$$:  181-block  7
call   11 never executed
    $$$$$:  181-block  8
branch 12 never executed
branch 13 never executed
    $$$$$:  181-block  9
call   14 never executed
    $$$$$:  181-block 10
branch 15 never executed
branch 16 never executed
    $$$$$:  181-block 11
call   17 never executed
    $$$$$:  181-block 12
branch 18 never executed
branch 19 never executed
    $$$$$:  181-block 13
call   20 never executed
        -:  182:
    #####:  183:        return static_cast<T &>(t);
    $$$$$:  183-block  0
    $$$$$:  183-block  1
    $$$$$:  183-block  2
    $$$$$:  183-block  3
    $$$$$:  183-block  4
    $$$$$:  183-block  5
    $$$$$:  183-block  6
    $$$$$:  183-block  7
    $$$$$:  183-block  8
    $$$$$:  183-block  9
    $$$$$:  183-block 10
    $$$$$:  183-block 11
    $$$$$:  183-block 12
    $$$$$:  183-block 13
        -:  184:    }
        -:  185:protected:
        -:  186:    // Do not allow instantiation of a singleton<T>. But we want to allow
        -:  187:    // `class T: public singleton<T>` so we can't delete this ctor
function _ZN5boost13serialization9singletonINS0_25extended_type_info_typeidISt6vectorIdSaIdEEEEEC2Ev called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS0_25extended_type_info_typeidI11DynamicNodeEEEC2Ev called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS0_25extended_type_info_typeidI11DynamicEdgeEEEC2Ev called 0 returned 0% blocks executed 0%
    #####:  188:    BOOST_DLLEXPORT singleton(){}
    $$$$$:  188-block  0
    $$$$$:  188-block  1
    $$$$$:  188-block  2
        -:  189:
        -:  190:public:
        -:  191:    BOOST_DLLEXPORT static T & get_mutable_instance(){
        -:  192:        BOOST_ASSERT(! get_singleton_module().is_locked());
        -:  193:        return get_instance();
        -:  194:    }
function _ZN5boost13serialization9singletonINS0_25extended_type_info_typeidISt6vectorIdSaIdEEEEE18get_const_instanceEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveESt6vectorIdSaIdEEEEE18get_const_instanceEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS0_25extended_type_info_typeidI11DynamicNodeEEE18get_const_instanceEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS0_25extended_type_info_typeidI11DynamicEdgeEEE18get_const_instanceEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS_7archive6detail11oserializerINS_3mpi15packed_oarchiveE11DynamicEdgeEEE18get_const_instanceEv called 0 returned 0% blocks executed 0%
    #####:  195:    BOOST_DLLEXPORT static const T & get_const_instance(){
    $$$$$:  195-block  0
    $$$$$:  195-block  1
    $$$$$:  195-block  2
    $$$$$:  195-block  3
    $$$$$:  195-block  4
    #####:  196:        return get_instance();
    $$$$$:  196-block  0
call    0 never executed
    $$$$$:  196-block  1
call    1 never executed
    $$$$$:  196-block  2
call    2 never executed
    $$$$$:  196-block  3
call    3 never executed
    $$$$$:  196-block  4
call    4 never executed
        -:  197:    }
function _ZN5boost13serialization9singletonINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveE11DynamicEdgeEEE12is_destroyedEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS0_25extended_type_info_typeidISt6vectorIdSaIdEEEEE12is_destroyedEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveESt6vectorIdSaIdEEEEE12is_destroyedEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS0_25extended_type_info_typeidI11DynamicNodeEEE12is_destroyedEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS_7archive6detail11iserializerINS_3mpi15packed_iarchiveE11DynamicNodeEEE12is_destroyedEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS0_25extended_type_info_typeidI11DynamicEdgeEEE12is_destroyedEv called 0 returned 0% blocks executed 0%
function _ZN5boost13serialization9singletonINS_7archive6detail11oserializerINS_3mpi15packed_oarchiveE11DynamicEdgeEEE12is_destroyedEv called 0 returned 0% blocks executed 0%
    #####:  198:    BOOST_DLLEXPORT static bool is_destroyed(){
    $$$$$:  198-block  0
    $$$$$:  198-block  1
    $$$$$:  198-block  2
    $$$$$:  198-block  3
    $$$$$:  198-block  4
    $$$$$:  198-block  5
    $$$$$:  198-block  6
    #####:  199:        return detail::singleton_wrapper< T >::is_destroyed();
    $$$$$:  199-block  0
call    0 never executed
    $$$$$:  199-block  1
call    1 never executed
    $$$$$:  199-block  2
call    2 never executed
    $$$$$:  199-block  3
call    3 never executed
    $$$$$:  199-block  4
call    4 never executed
    $$$$$:  199-block  5
call    5 never executed
    $$$$$:  199-block  6
call    6 never executed
        -:  200:    }
        -:  201:};
        -:  202:
        -:  203:// Assigning the instance reference to a static member forces initialization
        -:  204:// at startup time as described in
        -:  205:// https://groups.google.com/forum/#!topic/microsoft.public.vc.language/kDVNLnIsfZk
        -:  206:template<class T>
        2:  207:T * singleton< T >::m_instance = & singleton< T >::get_instance();
        1:  207-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    $$$$$:  207-block  1
call    2 never executed
        1:  207-block  2
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    $$$$$:  207-block  3
call    5 never executed
        1:  207-block  4
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    $$$$$:  207-block  5
call    8 never executed
        1:  207-block  6
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    $$$$$:  207-block  7
call   11 never executed
        1:  207-block  8
branch 12 taken 0 (fallthrough)
branch 13 taken 1
    $$$$$:  207-block  9
call   14 never executed
branch 15 taken 0 (fallthrough)
branch 16 taken 1
    $$$$$:  207-block 10
call   17 never executed
        1:  207-block 11
branch 18 taken 0 (fallthrough)
branch 19 taken 1
    $$$$$:  207-block 12
call   20 never executed
        -:  208:
        -:  209:} // namespace serialization
        -:  210:} // namespace boost
        -:  211:
        -:  212:#include <boost/archive/detail/abi_suffix.hpp> // pops abi_suffix.hpp pragmas
        -:  213:
        -:  214:#ifdef BOOST_MSVC
        -:  215:#pragma warning(pop)
        -:  216:#endif
        -:  217:
        -:  218:#endif // BOOST_SERIALIZATION_SINGLETON_HPP
