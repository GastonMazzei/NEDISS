        -:    0:Source:/usr/include/boost/mpi/packed_iarchive.hpp
        -:    0:Graph:/home/m4zz31/cppprojct/cmake-build-debug-coverage/CMakeFiles/cppprojct.dir/Tests/graph-test-init.cpp.gcno
        -:    0:Data:/home/m4zz31/cppprojct/cmake-build-debug-coverage/CMakeFiles/cppprojct.dir/Tests/graph-test-init.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// (C) Copyright 2005 Matthias Troyer
        -:    2:// (C) Copyright 2006 Douglas Gregor <doug.gregor -at- gmail.com>
        -:    3:
        -:    4:// Use, modification and distribution is subject to the Boost Software
        -:    5:// License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
        -:    6:// http://www.boost.org/LICENSE_1_0.txt)
        -:    7:
        -:    8://  Authors: Matthias Troyer
        -:    9://           Douglas Gregor
        -:   10:
        -:   11:/** @file packed_iarchive.hpp
        -:   12: *
        -:   13: *  This header provides the facilities for packing Serializable data
        -:   14: *  types into a buffer using @c MPI_Pack. The buffers can then be
        -:   15: *  transmitted via MPI and then be unpacked either via the facilities
        -:   16: *  in @c packed_oarchive.hpp or @c MPI_Unpack.
        -:   17: */
        -:   18:#ifndef BOOST_MPI_PACKED_IARCHIVE_HPP
        -:   19:#define BOOST_MPI_PACKED_IARCHIVE_HPP
        -:   20:
        -:   21:#include <boost/mpi/datatype.hpp>
        -:   22:#include <boost/archive/detail/auto_link_archive.hpp>
        -:   23:#include <boost/archive/detail/common_iarchive.hpp>
        -:   24:#include <boost/archive/basic_archive.hpp>
        -:   25:#include <boost/mpi/detail/packed_iprimitive.hpp>
        -:   26:#include <boost/mpi/detail/binary_buffer_iprimitive.hpp>
        -:   27:#include <boost/serialization/string.hpp>
        -:   28:#include <boost/serialization/collection_size_type.hpp>
        -:   29:#include <boost/serialization/item_version_type.hpp>
        -:   30:#include <boost/assert.hpp>
        -:   31:
        -:   32:namespace boost { namespace mpi {
        -:   33:
        -:   34:#ifdef BOOST_MPI_HOMOGENEOUS
        -:   35:  typedef binary_buffer_iprimitive iprimitive;
        -:   36:#else
        -:   37:  typedef packed_iprimitive iprimitive;
        -:   38:#endif
        -:   39:
        -:   40:
        -:   41:/** @brief An archive that unpacks binary data from an MPI buffer.
        -:   42: *
        -:   43: *  The @c packed_oarchive class is an Archiver (as in the
        -:   44: *  Boost.Serialization library) that unpacks binary data from a
        -:   45: *  buffer received via MPI. It can operate on any Serializable data
        -:   46: *  type and will use the @c MPI_Unpack function of the underlying MPI
        -:   47: *  implementation to perform deserialization.
        -:   48: */
        -:   49:
function _ZN5boost3mpi15packed_iarchiveD0Ev called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchiveD2Ev called 0 returned 0% blocks executed 0%
    #####:   50:class BOOST_MPI_DECL packed_iarchive
    $$$$$:   50-block  0
    $$$$$:   50-block  1
call    0 never executed
call    1 never executed
    $$$$$:   50-block  2
    $$$$$:   50-block  3
call    2 never executed
call    3 never executed
        -:   51:  : public iprimitive
        -:   52:  , public archive::detail::common_iarchive<packed_iarchive>
        -:   53:{
        -:   54:public:
        -:   55:  /**
        -:   56:   *  Construct a @c packed_iarchive to receive data over the given
        -:   57:   *  MPI communicator and with an initial buffer.
        -:   58:   *
        -:   59:   *  @param comm The communicator over which this archive will be
        -:   60:   *  received.
        -:   61:   *
        -:   62:   *  @param b A user-defined buffer that contains the binary
        -:   63:   *  representation of serialized objects.
        -:   64:   *
        -:   65:   *  @param flags Control the serialization of the data types. Refer
        -:   66:   *  to the Boost.Serialization documentation before changing the
        -:   67:   *  default flags.
        -:   68:   */
        -:   69:
function _ZN5boost3mpi15packed_iarchiveC2ERKP19ompi_communicator_tRSt6vectorIcNS0_9allocatorIcEEEji called 0 returned 0% blocks executed 0%
    #####:   70:  packed_iarchive(MPI_Comm const & comm, buffer_type & b, unsigned int flags = boost::archive::no_header, int position = 0)
    $$$$$:   70-block  0
    #####:   71:        : iprimitive(b,comm,position),
    #####:   72:          archive::detail::common_iarchive<packed_iarchive>(flags)
    $$$$$:   72-block  0
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   73:        {}
        -:   74:
        -:   75:  /**
        -:   76:   *  Construct a @c packed_iarchive to receive data over the given
        -:   77:   *  MPI communicator.
        -:   78:   *
        -:   79:   *  @param comm The communicator over which this archive will be
        -:   80:   *  received.
        -:   81:   *
        -:   82:   *  @param flags Control the serialization of the data types. Refer
        -:   83:   *  to the Boost.Serialization documentation before changing the
        -:   84:   *  default flags.
        -:   85:   */
        -:   86:
function _ZN5boost3mpi15packed_iarchiveC2ERKP19ompi_communicator_tmj called 0 returned 0% blocks executed 0%
    #####:   87:  packed_iarchive
    $$$$$:   87-block  0
        -:   88:          ( MPI_Comm const & comm , std::size_t s=0,
        -:   89:           unsigned int flags = boost::archive::no_header)
    #####:   90:         : iprimitive(internal_buffer_,comm)
        -:   91:         , archive::detail::common_iarchive<packed_iarchive>(flags)
    #####:   92:         , internal_buffer_(s)
    $$$$$:   92-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    $$$$$:   92-block  1
call    6 never executed
    %%%%%:   92-block  2
call    7 never executed
    %%%%%:   92-block  3
    %%%%%:   92-block  4
call    8 never executed
    #####:   93:        {}
        -:   94:
        -:   95:  // Load everything else in the usual way, forwarding on to the Base class
        -:   96:  template<class T>
function _ZN5boost3mpi15packed_iarchive13load_overrideIKNS_13serialization13array_wrapperIdEEEEvRT_N4mpl_5bool_ILb0EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideIKNS_13serialization3nvpIjEEEEvRT_N4mpl_5bool_ILb0EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideIKNS_13serialization3nvpINS3_20collection_size_typeEEEEEvRT_N4mpl_5bool_ILb0EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideI11DynamicEdgeEEvRT_N4mpl_5bool_ILb0EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideISt6vectorIdSaIdEEEEvRT_N4mpl_5bool_ILb0EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINS_6detail8parallel20maybe_store_propertyI11DynamicEdgeEEEEvRT_N4mpl_5bool_ILb0EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideIKNS_13serialization3nvpI11DynamicNodeEEEEvRT_N4mpl_5bool_ILb0EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideIKNS_13serialization3nvpINS_6detail8parallel31msg_add_edge_with_property_dataINS6_17global_descriptorImEEm11DynamicEdgeEEEEEEvRT_N4mpl_5bool_ILb0EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideIKNS_13serialization3nvpIiEEEEvRT_N4mpl_5bool_ILb0EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideI11DynamicNodeEEvRT_N4mpl_5bool_ILb0EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINS_8parallel6detail14untracked_pairIi11DynamicNodeEEEEvRT_N4mpl_5bool_ILb0EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINS_6detail8parallel31msg_add_edge_with_property_dataINS4_17global_descriptorImEEm11DynamicEdgeEEEEvRT_N4mpl_5bool_ILb0EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINS_8parallel6detail14untracked_pairIiNS_6detail8parallel31msg_add_edge_with_property_dataINS7_17global_descriptorImEEm11DynamicEdgeEEEEEEvRT_N4mpl_5bool_ILb0EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINS_6detail8parallel22msg_nonlocal_edge_dataI11DynamicEdgeNS3_14edge_desc_implINS_12directed_tagEmEEEEEEvRT_N4mpl_5bool_ILb0EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRT_N4mpl_5bool_ILb0EEE called 0 returned 0% blocks executed 0%
    #####:   97:  void load_override(T& x, mpl::false_)
    $$$$$:   97-block  0
    $$$$$:   97-block  1
    $$$$$:   97-block  2
    $$$$$:   97-block  3
    $$$$$:   97-block  4
    $$$$$:   97-block  5
    $$$$$:   97-block  6
    $$$$$:   97-block  7
    $$$$$:   97-block  8
    $$$$$:   97-block  9
    $$$$$:   97-block 10
    $$$$$:   97-block 11
    $$$$$:   97-block 12
    $$$$$:   97-block 13
    $$$$$:   97-block 14
        -:   98:  {
    #####:   99:    archive::detail::common_iarchive<packed_iarchive>::load_override(x);
    $$$$$:   99-block  0
call    0 never executed
    $$$$$:   99-block  1
call    1 never executed
    $$$$$:   99-block  2
call    2 never executed
    $$$$$:   99-block  3
call    3 never executed
    $$$$$:   99-block  4
call    4 never executed
    $$$$$:   99-block  5
call    5 never executed
    $$$$$:   99-block  6
call    6 never executed
    $$$$$:   99-block  7
call    7 never executed
    $$$$$:   99-block  8
call    8 never executed
    $$$$$:   99-block  9
call    9 never executed
    $$$$$:   99-block 10
call   10 never executed
    $$$$$:   99-block 11
call   11 never executed
    $$$$$:   99-block 12
call   12 never executed
    $$$$$:   99-block 13
call   13 never executed
    $$$$$:   99-block 14
call   14 never executed
    #####:  100:  }
        -:  101:
        -:  102:  // Load it directly using the primnivites
        -:  103:  template<class T>
function _ZN5boost3mpi15packed_iarchive13load_overrideIjEEvRT_N4mpl_5bool_ILb1EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINS_13serialization20collection_size_typeEEEvRT_N4mpl_5bool_ILb1EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideIiEEvRT_N4mpl_5bool_ILb1EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideIdEEvRT_N4mpl_5bool_ILb1EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINS_6detail14edge_desc_implINS_12directed_tagEmEEEEvRT_N4mpl_5bool_ILb1EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINS_6detail8parallel17msg_add_edge_dataINS4_17global_descriptorImEEmEEEEvRT_N4mpl_5bool_ILb1EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINS_6detail8parallel20msg_remove_edge_dataINS4_15edge_descriptorINS3_14edge_desc_implINS_12directed_tagEmEEEEEEEEvRT_N4mpl_5bool_ILb1EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINS_7archive13tracking_typeEEEvRT_N4mpl_5bool_ILb1EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINS_7archive14object_id_typeEEEvRT_N4mpl_5bool_ILb1EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideIaEEvRT_N4mpl_5bool_ILb1EEE called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideIsEEvRT_N4mpl_5bool_ILb1EEE called 0 returned 0% blocks executed 0%
    #####:  104:  void load_override(T& x, mpl::true_)
    $$$$$:  104-block  0
    $$$$$:  104-block  1
    $$$$$:  104-block  2
    $$$$$:  104-block  3
    $$$$$:  104-block  4
    $$$$$:  104-block  5
    $$$$$:  104-block  6
    $$$$$:  104-block  7
    $$$$$:  104-block  8
    $$$$$:  104-block  9
    $$$$$:  104-block 10
        -:  105:  {
    #####:  106:    iprimitive::load(x);
    $$$$$:  106-block  0
call    0 never executed
    $$$$$:  106-block  1
call    1 never executed
    $$$$$:  106-block  2
call    2 never executed
    $$$$$:  106-block  3
call    3 never executed
    $$$$$:  106-block  4
call    4 never executed
    $$$$$:  106-block  5
call    5 never executed
    $$$$$:  106-block  6
call    6 never executed
    $$$$$:  106-block  7
call    7 never executed
    $$$$$:  106-block  8
call    8 never executed
    $$$$$:  106-block  9
call    9 never executed
    $$$$$:  106-block 10
call   10 never executed
    #####:  107:  }
        -:  108:
        -:  109:  // Load all supported datatypes directly
        -:  110:  template<class T>
function _ZN5boost3mpi15packed_iarchive13load_overrideIjEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINS_13serialization20collection_size_typeEEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideIKNS_13serialization13array_wrapperIdEEEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideIKNS_13serialization3nvpIjEEEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideIKNS_13serialization3nvpINS3_20collection_size_typeEEEEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideI11DynamicEdgeEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideIiEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideISt6vectorIdSaIdEEEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideIdEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINS_6detail14edge_desc_implINS_12directed_tagEmEEEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINS_6detail8parallel20maybe_store_propertyI11DynamicEdgeEEEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideIKNS_13serialization3nvpI11DynamicNodeEEEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideIKNS_13serialization3nvpINS_6detail8parallel31msg_add_edge_with_property_dataINS6_17global_descriptorImEEm11DynamicEdgeEEEEEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideIKNS_13serialization3nvpIiEEEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideI11DynamicNodeEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINS_8parallel6detail14untracked_pairIi11DynamicNodeEEEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINS_6detail8parallel17msg_add_edge_dataINS4_17global_descriptorImEEmEEEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINS_6detail8parallel31msg_add_edge_with_property_dataINS4_17global_descriptorImEEm11DynamicEdgeEEEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINS_8parallel6detail14untracked_pairIiNS_6detail8parallel31msg_add_edge_with_property_dataINS7_17global_descriptorImEEm11DynamicEdgeEEEEEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINS_6detail8parallel22msg_nonlocal_edge_dataI11DynamicEdgeNS3_14edge_desc_implINS_12directed_tagEmEEEEEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINS_6detail8parallel20msg_remove_edge_dataINS4_15edge_descriptorINS3_14edge_desc_implINS_12directed_tagEmEEEEEEEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINS_7archive13tracking_typeEEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINS_7archive14object_id_typeEEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideIaEEvRT_ called 0 returned 0% blocks executed 0%
function _ZN5boost3mpi15packed_iarchive13load_overrideIsEEvRT_ called 0 returned 0% blocks executed 0%
    #####:  111:  void load_override(T& x)
    $$$$$:  111-block  0
    $$$$$:  111-block  1
    $$$$$:  111-block  2
    $$$$$:  111-block  3
    $$$$$:  111-block  4
    $$$$$:  111-block  5
    $$$$$:  111-block  6
    $$$$$:  111-block  7
    $$$$$:  111-block  8
    $$$$$:  111-block  9
    $$$$$:  111-block 10
    $$$$$:  111-block 11
    $$$$$:  111-block 12
    $$$$$:  111-block 13
    $$$$$:  111-block 14
    $$$$$:  111-block 15
    $$$$$:  111-block 16
    $$$$$:  111-block 17
    $$$$$:  111-block 18
    $$$$$:  111-block 19
    $$$$$:  111-block 20
    $$$$$:  111-block 21
    $$$$$:  111-block 22
    $$$$$:  111-block 23
    $$$$$:  111-block 24
    $$$$$:  111-block 25
        -:  112:  {
        -:  113:    typedef typename mpl::apply1<use_array_optimization
        -:  114:      , BOOST_DEDUCED_TYPENAME remove_const<T>::type
        -:  115:    >::type use_optimized;
    #####:  116:    load_override(x, use_optimized());
    $$$$$:  116-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    $$$$$:  116-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    $$$$$:  116-block  2
call    7 never executed
call    8 never executed
branch  9 never executed
branch 10 never executed
    $$$$$:  116-block  3
call   11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
    $$$$$:  116-block  4
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
    $$$$$:  116-block  5
call   19 never executed
call   20 never executed
branch 21 never executed
branch 22 never executed
    $$$$$:  116-block  6
call   23 never executed
call   24 never executed
branch 25 never executed
branch 26 never executed
    $$$$$:  116-block  7
call   27 never executed
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  116-block  8
call   31 never executed
call   32 never executed
branch 33 never executed
branch 34 never executed
    $$$$$:  116-block  9
call   35 never executed
call   36 never executed
branch 37 never executed
branch 38 never executed
    $$$$$:  116-block 10
call   39 never executed
call   40 never executed
branch 41 never executed
branch 42 never executed
    $$$$$:  116-block 11
call   43 never executed
call   44 never executed
branch 45 never executed
branch 46 never executed
    $$$$$:  116-block 12
call   47 never executed
call   48 never executed
branch 49 never executed
branch 50 never executed
    $$$$$:  116-block 13
call   51 never executed
call   52 never executed
branch 53 never executed
branch 54 never executed
    $$$$$:  116-block 14
call   55 never executed
call   56 never executed
branch 57 never executed
branch 58 never executed
    $$$$$:  116-block 15
call   59 never executed
branch 60 never executed
branch 61 never executed
    $$$$$:  116-block 16
call   62 never executed
call   63 never executed
branch 64 never executed
branch 65 never executed
    $$$$$:  116-block 17
call   66 never executed
branch 67 never executed
branch 68 never executed
    $$$$$:  116-block 18
call   69 never executed
branch 70 never executed
branch 71 never executed
    $$$$$:  116-block 19
call   72 never executed
branch 73 never executed
branch 74 never executed
    $$$$$:  116-block 20
call   75 never executed
call   76 never executed
branch 77 never executed
branch 78 never executed
    $$$$$:  116-block 21
call   79 never executed
branch 80 never executed
branch 81 never executed
    $$$$$:  116-block 22
call   82 never executed
branch 83 never executed
branch 84 never executed
    $$$$$:  116-block 23
call   85 never executed
call   86 never executed
branch 87 never executed
branch 88 never executed
    $$$$$:  116-block 24
call   89 never executed
call   90 never executed
branch 91 never executed
branch 92 never executed
    $$$$$:  116-block 25
call   93 never executed
call   94 never executed
branch 95 never executed
branch 96 never executed
    #####:  117:  }
    $$$$$:  117-block  0
    $$$$$:  117-block  1
    $$$$$:  117-block  2
    $$$$$:  117-block  3
    $$$$$:  117-block  4
    $$$$$:  117-block  5
    $$$$$:  117-block  6
    $$$$$:  117-block  7
    $$$$$:  117-block  8
    $$$$$:  117-block  9
    $$$$$:  117-block 10
    $$$$$:  117-block 11
    $$$$$:  117-block 12
    $$$$$:  117-block 13
    $$$$$:  117-block 14
    $$$$$:  117-block 15
    $$$$$:  117-block 16
    $$$$$:  117-block 17
    $$$$$:  117-block 18
    $$$$$:  117-block 19
    $$$$$:  117-block 20
    $$$$$:  117-block 21
    $$$$$:  117-block 22
    $$$$$:  117-block 23
    $$$$$:  117-block 24
    $$$$$:  117-block 25
        -:  118:
        -:  119:  // input archives need to ignore  the optional information
function _ZN5boost3mpi15packed_iarchive13load_overrideERNS_7archive22class_id_optional_typeE called 0 returned 0% blocks executed 0%
    #####:  120:  void load_override(archive::class_id_optional_type & /*t*/){}
    $$$$$:  120-block  0
        -:  121:
function _ZN5boost3mpi15packed_iarchive13load_overrideERNS_7archive13class_id_typeE called 0 returned 0% blocks executed 0%
    #####:  122:  void load_override(archive::class_id_type & t){
    $$$$$:  122-block  0
    #####:  123:    int_least16_t x=0;
    #####:  124:    * this->This() >> x;
    $$$$$:  124-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:  125:    t = boost::archive::class_id_type(x);
    $$$$$:  125-block  0
call    0 never executed
call    1 never executed
    #####:  126:  }
        -:  127:
function _ZN5boost3mpi15packed_iarchive13load_overrideERNS_7archive12version_typeE called 0 returned 0% blocks executed 0%
    #####:  128:  void load_override(archive::version_type & t){
    $$$$$:  128-block  0
    #####:  129:    int_least8_t x=0;
    #####:  130:    * this->This() >> x;
    $$$$$:  130-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:  131:    t = boost::archive::version_type(x);
    $$$$$:  131-block  0
call    0 never executed
call    1 never executed
    #####:  132:  }
        -:  133:
        -:  134:  void load_override(archive::class_id_reference_type & t){
        -:  135:    load_override(static_cast<archive::class_id_type &>(t));
        -:  136:  }
        -:  137:
function _ZN5boost3mpi15packed_iarchive13load_overrideERNS_7archive15class_name_typeE called 0 returned 0% blocks executed 0%
    #####:  138:  void load_override(archive::class_name_type & t)
    $$$$$:  138-block  0
        -:  139:  {
    #####:  140:    std::string cn;
    $$$$$:  140-block  0
call    0 never executed
call    1 never executed
    %%%%%:  140-block  1
call    2 never executed
    #####:  141:    cn.reserve(BOOST_SERIALIZATION_MAX_KEY_SIZE);
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  142:    * this->This() >> cn;
    $$$$$:  142-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:  143:    std::memcpy(t, cn.data(), cn.size());
    $$$$$:  143-block  0
call    0 never executed
call    1 never executed
call    2 never executed
        -:  144:    // borland tweak
    #####:  145:    t.t[cn.size()] = '\0';
call    0 never executed
    #####:  146:  }
        -:  147:
        -:  148:private:
        -:  149:  /// An internal buffer to be used when the user does not supply his
        -:  150:  /// own buffer.
        -:  151:  buffer_type internal_buffer_;
        -:  152:};
        -:  153:
        -:  154:} } // end namespace boost::mpi
        -:  155:
        -:  156:BOOST_SERIALIZATION_REGISTER_ARCHIVE(boost::mpi::packed_iarchive)
        -:  157:BOOST_SERIALIZATION_USE_ARRAY_OPTIMIZATION(boost::mpi::packed_iarchive)
        -:  158:
        -:  159:#endif // BOOST_MPI_PACKED_IARCHIVE_HPP
