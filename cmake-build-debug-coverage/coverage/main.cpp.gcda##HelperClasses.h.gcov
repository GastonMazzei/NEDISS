        -:    0:Source:/home/m4zz31/cppprojct/Utils/HelperClasses.h
        -:    0:Graph:/home/m4zz31/cppprojct/cmake-build-debug-coverage/CMakeFiles/cppprojct.dir/main.cpp.gcno
        -:    0:Data:/home/m4zz31/cppprojct/cmake-build-debug-coverage/CMakeFiles/cppprojct.dir/main.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by m4zz31 on 5/11/21.
        -:    3://
        -:    4:
        -:    5:#ifndef CPPPROJCT_HELPERCLASSES_H
        -:    6:#define CPPPROJCT_HELPERCLASSES_H
        -:    7:
        -:    8:#include "../GraphClasses/GeneralGraph.h"
        -:    9:
        -:   10:
        -:   11:typedef Graph::vertex_descriptor VD;
        -:   12:typedef Graph::edge_descriptor ED;//                        (UID is [Number of total nodes] * P_id  + local_index)
        -:   13:typedef std::tuple<double, double, unsigned long> InfoVecElem; // DynamicNode.value, DynamicEdge.value, UID
        -:   14:typedef std::tuple<double, int, int> PartialInfoVecElem; // DynamicNode.value Owner Index
        -:   15:
function _ZN12ParallelCellD2Ev called 200 returned 100% blocks executed 100%
      400:   16:struct ParallelCell{
      200:   16-block  0
      200:   16-block  1
call    0 returned 200
call    1 returned 200
call    2 returned 200
        -:   17:    // Container of variable size that can keep track of different threads storing objects
        -:   18:    std::vector<std::list<InfoVecElem>> ProcessLocally;
        -:   19:    std::vector<std::list<PartialInfoVecElem>> MissingA;
        -:   20:    std::vector<std::list<PartialInfoVecElem>> MissingB;
        -:   21:    explicit ParallelCell(){};
        -:   22:};
        -:   23:
function _ZN14ParallelHelperD2Ev called 1 returned 100% blocks executed 100%
        2:   24:struct ParallelHelper{
        1:   24-block  0
        1:   24-block  1
call    0 returned 1
        -:   25:    std::vector<ParallelCell> data; // initialized to NNodes x NT
        -:   26:    explicit ParallelHelper(int NT, unsigned long NNodes);
        -:   27:};
        -:   28:
        -:   29:
        -:   30:
function _ZN19CommunicationHelperD2Ev called 1 returned 100% blocks executed 100%
        2:   31:struct CommunicationHelper{
        1:   31-block  0
        1:   31-block  1
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
        -:   32:    // _NUM_THREADS can be captured from
        -:   33:    std::vector<int> WORLD_RANK, WORLD_SIZE, MY_NUM;
        -:   34:    int NUM_THREADS;
        -:   35:    boost::mpi::environment ENV;
        -:   36:    boost::mpi::communicator WORLD;
        -:   37:    explicit CommunicationHelper(Graph &g);
        -:   38:};
        -:   39:
        -:   40:
        -:   41:
        -:   42:struct MappingHelper{
        -:   43:    // Relevant maps that should be passed as an instance
        -:   44:    // of a struct ;-)
        -:   45:    EdgeOwnerMap EdgeOwner;
        -:   46:    OwnerMap NodeOwner;
        -:   47:    LocalVertexMap Local;
        -:   48:    GlobalVertexMap Global;
function _ZN13MappingHelperC2ERN5boost14adjacency_listINS0_4vecSENS0_12distributedSINS0_5graph11distributed17mpi_process_groupES2_NS0_8defaultSEEENS0_14bidirectionalSE11DynamicNode11DynamicEdgeNS0_11no_propertyENS0_5listSEEE called 1 returned 100% blocks executed 100%
        2:   49:    explicit MappingHelper(Graph &g): EdgeOwner(get(boost::edge_owner, g)),
        1:   49-block  0
        1:   49-block  1
call    0 returned 1
        1:   50:                                      NodeOwner(get(boost::vertex_owner, g)),
call    0 returned 1
        1:   51:                                      Local(get(boost::vertex_local, g)),
call    0 returned 1
        1:   52:                                      Global(get(boost::vertex_global, g)){};
call    0 returned 1
        -:   53:};
        -:   54:
        -:   55:
        -:   56:
function _ZN15IntegrationCellC2Ev called 200 returned 100% blocks executed 100%
function _ZN15IntegrationCellD2Ev called 200 returned 100% blocks executed 100%
      800:   57:struct IntegrationCell{
      200:   57-block  0
      200:   57-block  1
call    0 returned 200
call    1 returned 200
call    2 returned 200
call    3 returned 200
      200:   57-block  2
      200:   57-block  3
call    4 returned 200
call    5 returned 200
call    6 returned 200
call    7 returned 200
        -:   58:    double centralValue;
        -:   59:    std::vector<double> centralParams;
        -:   60:    std::list<InfoVecElem> ResultsPendProcess;
        -:   61:    std::vector<double> edgeValues;
        -:   62:    std::vector<double> neighborValues;
        -:   63:    void build(Graph &g, VD v, MappingHelper &Map,
        -:   64:               unsigned long &NOwned,
        -:   65:               unsigned long &rank,
        -:   66:               unsigned long &NLocals,
        -:   67:               unsigned long &M);
        -:   68:};
        -:   69:
        -:   70:
        -:   71:typedef std::vector<IntegrationCell> IntegrationHelper;
        -:   72:
        -:   73:
        -:   74:struct ReferenceContainer {
        -:   75:    ParallelHelper * p_ParHelper;
        -:   76:    CommunicationHelper * p_ComHelper;
        -:   77:    IntegrationHelper * p_IntHelper;
        -:   78:    Graph * p_g;
        -:   79:    int * p_TOT;
        -:   80:    int * p_PENDING_INT;
        -:   81:    std::queue<long> * p_CHECKED;
        -:   82:    std::queue<long> * p_READY_FOR_INTEGRATION;
        -:   83:    ReferenceContainer(ParallelHelper &ParHelper,
        -:   84:                       CommunicationHelper &ComHelper,
        -:   85:                       Graph & g,
        -:   86:                       std::queue<long> & CHECKED,
        -:   87:                       std::queue<long> & READY_FOR_INTEGRATION,
        -:   88:                       IntegrationHelper & IntHelper,
        -:   89:                       int & TOT,
        -:   90:                       int & PENDING_INT);
        -:   91:};
        -:   92:
        -:   93:
        -:   94:struct OpenMPHelper{
        -:   95:    long MY_THREAD_n, N_THREADS_n, MY_OFFSET_n, MY_LENGTH_n;
        -:   96:    OpenMPHelper(long NLocals, int i);
        -:   97:    OpenMPHelper(long NLocals, int i, long N_THREADS, long MY_THREAD);
        -:   98:};
        -:   99:
        -:  100:
        -:  101:
        -:  102:#endif //CPPPROJCT_HELPERCLASSES_H
